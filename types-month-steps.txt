1. 
	 
	* explain what the drawPieForAMonthFunction does.
	* explain the params for r.piechart  ie. x , y position, radius, and data.
	* explain r.text to draw arbitary text anywhere
	* explain the options for colors or else raphael will use the defaults
	var data = [25, 25, 25, 25];
	var year = 2012;
	var month = 1;

	drawPieForAMonth(year, month, xPos, yPos, radius, data, colors );


2. 	
	* Introduce the CardData object that parses the json
	* which then uses the function CardData.countFor(year, month, cardType)
	

	//parses the json
	//stores in the form of
	// CardData.year.month.Features
	// CardData.year.month.Bug
	//data.2010.1.Feature
	var cardTypesPerMonth =  new CardData(teamData);




3.
	* then use cardTypesPerMonth to to access the data
		var numberOfFeatures = cardTypesPerMonth.countFor(year, month -1, "Feature");
		var numberOfBugs = cardTypesPerMonth.countFor(year, month - 1, "Bug");
		var numberOfMaintenanceTasks = cardTypesPerMonth.countFor(year, month -1, "Build Maintenance");
		var numberOfInfrastructureTasks = cardTypesPerMonth.countFor(year, month -1, "Infrastructure");

		var data = [numberOfFeatures, numberOfBugs, numberOfMaintenanceTasks, numberOfInfrastructureTasks]; 

4.
	* now repeat and draw for each month from Jan 2010 to 2012
		for(var year = 2010; year <=2012; year++){
		for(var month = 1; month <=12; month++){
			//increment the xPos by the spacing and multiply by how much we need to move to the right
			xPos = (radius + spacing) * xOffSet;

			//code to draw pie chart goes here

			xOffSet++;
			//draw a new line every 6 months
			//increment the yPos every 6 months to move the next line down
			if(month%6 == 0){
				yOffSet++;
				yPos = (radius + spacing) * yOffSet;
				xPos = 20;
				xOffSet = 1;
						
			}


		  }
		 }

5. * show chart

6. 
	* now lets add some nice interactions
	* make the slices expand and show the value of the slice in a fan out animation
	* in the  drawPieForAMonthFunction add
	pie.hover(hoverIn, hoverOut);

	* which use

	function hoverIn(){
	//stop scale animation if it already exists
	this.sector.stop();
	//create a popup and add to the flag object so we can clear it later
	this.flag = r.popup(this.mx, this.my, this.value.value)
				.attr({
						fill: "0-#c9de96-#8ab66b:44-#398235",
						stroke: "#000"});
	//how big the slice expands
	this.sector.scale(1.5, 1.5, this.cx, this.cy);
	
    if (this.label) {
        this.label[0].stop();
        this.label[0].attr({ r: 7.5 });
        this.label[1].attr({ "font-weight": 800 });
    }
 }

function hoverOut(){
	this.flag.animate({opacity: 0}, 300, function () {this.remove();});
	this.sector.animate({ transform: 's1 1 ' + this.cx + ' ' + this.cy }, 500, "bounce");
	if (this.label) {
    	this.label[0].animate({ r: 5 }, 500, "bounce");
        this.label[1].attr({ "font-weight": 400 });
    }
 }

 7.
 	* now lets add a legend to the end
 		//draw the legend after the bottom row
	xPos = (radius + spacing) * xOffSet;
	var legendOptions = { 
		legend: ["Features", "Bugs", "Infrastructure", "Maintenance"], //legend labels
		legendpos: "east",  //legend position
		label: [25, 25, 25, 25], //since the legend is a pie chart, set some values
		 colors: colors}
	pie = r.piechart(xPos, yPos+ 50, radius, [25, 25, 25, 25], legendOptions);
	pie.hover(hoverIn, hoverOut);



