Create the raphael holder
-------------------------

    var r = Raphael("holder", 600, 800);
    r.piechart(125, 125, 100, [10,10,25,50])
    
Let's change the default colours
---------------------------------
   
   //add var
   colours = ["#225533", "#44bbcc", "#88dddd", "#bbeeff"];
   
   //add colours to the option last property
   r.piechart(125, 125, 100, [10,10,25,50], {colors:colours})
   
   
Now to sort the data
--------------------

hmmm... had to set json to team_data = and then replace all blanks with : "", maybe better way... 
        console.log(e["In Production"]); //ok so this is just a string, but we want a date


    var data = team_data; //from the json

    var sortedData = []
    
    data.forEach(function(task) { //do I need task here?
        var dateFinished = moment(task["In Production"], "DD/MM/YYYY");
        if (dateFinished) {
            var month = dateFinished.month(), 
                year = dateFinished.year(),
                taskType = task["Type"]
        
		    if(sortedData[year] == undefined) sortedData[year] = new Object(); //?
		    if(sortedData[year][month] == undefined) sortedData[year][month] = new Object();
		    if(sortedData[year][month][taskType] == undefined) sortedData[year][month][taskType] = 0;
		
		    console.log(sortedData["2012"])
		    sortedData[year][month][taskType] ++; 
        }
	});


do one month's worth of data
----------------------------
    //make it a bit smaller
    
    var data = [50,50,25,50];
    r.piechart(125, 125, 100, data, {colors:colours})
    
    
    var r = Raphael("holder"), 
    colours = ["#225533", "#44bbcc", "#88dddd", "#bbeeff"];
    
    var sortedData = sort_data(),
        year = 2012,
        month = 1, 
        features = sortedData[year][month]["MMF"] || 0,
        bugs = sortedData[year][month]["Bug"] || 0,
        infrastructure = sortedData[year][month]["Infrastructure"] || 0,
        maintenance = sortedData[year][month]["Maintenance"] || 0;
    
    var data = [features, bugs, infrastructure, maintenance];
    
    r.piechart(125, 125, 100, data, {colors:colours})
    
print out label
---------------

    r.text(x, y + labelOffset, moment.monthsShort[month] + " " + year)
    

do all months
-------------
-------------

some will have no data
------------------------
       if (sortedData[year][month]) {
       
(could have sortedData do something about this?)

offset
------

   pieSpacing = radius + 55,
   
   x += pieSpacing; <-- I don't really want this to happen for the first one, but... to do 
   
   
pop down a row every six months
--------------------------------
    line = 1,
    x = 50,
    pieSpacing = radius + 55,
    y = pieSpacing * line,

        x += pieSpacing;
        
        if ((month+1) % 6 == 0) {
            x = 50;
            line++;
			y = pieSpacing * line;
		}

add a legend after the last line
--------------------------------

    
    x += pieSpacing;
    line++;
    y = pieSpacing * line;
	var legendOptions = { 
		legend: ["Features", "Bugs", "Infrastructure", "Maintenance"], 
		legendpos: "east",  
		label: [25, 25, 25, 25], 
		colors: colours}
	pie = r.piechart(x, y, radius, [25, 25, 25, 25], legendOptions);
    
ideally we want to know what they represent
-------------------------------------------

add hover in and hover out.

hmm. ok how about a stacked chart as well
-----------------------------------------

make the canvas wider
------------------------

    var r = Raphael("holder", 2000, 800), 
    
include barchart
----------------

OK - could do this: 

	//(x_start, y_start, x_width, from, to, steps, orientation, labels, type, dashsize)
	Raphael.g.axis(825,230,310,null,null,4,2,["Today", "Yesterday", "Tomorrow", "Future"], "|", 0, r)
	
	//data2 = [[55, 20, 13, 32, 5, 1, 2, 10], [10, 2, 1, 5, 32, 13, 20, 55], [12, 20, 30]],
	//r.barchart(825, 150, 300, 220, data2, {stacked: true});
    
    
But haven't figured out the axes. For now, a line graph:

include linegraph
-----------------

<script type="text/javascript" src="lib/g.line.js"></script>
    
    
    
    

